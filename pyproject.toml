[project]
name = "pyproject-runner"
version = "0.1.0"
description = "Run tasks defined in pyproject.toml files."
authors = [
    { name = "Brandon Carpenter", email = "brandon@avantus.com" }
]
dependencies = [
    "click ~= 8.1.7",
    "tomli ~= 2.0.1; python_version < '3.11'",
]
readme = "README.md"
requires-python = ">= 3.10"
license.file = "LICENSE.txt"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Build Tools",
    "Typing :: Typed",
]

[project.scripts]
"rr" = "pyproject_runner.__main__:main"  # short for runner-run or run-runner

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy ~= 1.11.1",
]

[tool.hatch.build.targets.sdist]
only-include = [
    '.python-version',
    'uv.lock',
    'src/pyproject_runner/',
    '.gitignore',
    'LICENSE.txt',
    'README.md',
    'pyproject.toml',
]

[tool.hatch.build.targets.wheel]
packages = ["src/pyproject_runner"]

[tool.mypy]
mypy_path = "src"
packages = "pyproject_runner"
strict = true


[tool.pyproject-runner.tasks]
version = { call = "builtins:print(__import__('sys').version)" }
version-cmd = { cmd = ["python", "-c", "builtins:print(__import__('sys').version)"] }
version-chain = { chain = ["version-cmd", "noop"]}
