[project]
name = "pyproject-runner"
version = "0.1.0"
description = "Run tasks defined in pyproject.toml files."
authors = [
    { name = "Brandon Carpenter", email = "brandon@avantus.com" }
]
dependencies = [
    "click >= 6",
    "tomli >= 1.1; python_version < '3.11'",
]
readme = "README.md"
requires-python = ">= 3.10"
license.file = "LICENSE.txt"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Build Tools",
]

[project.scripts]
"rr" = "pyproject_runner.__main__:main"  # short for runner-run or run-runner

[project.urls]
homepage = "https://github.com/avantus-tech/pyproject-runner"
documentation = "https://github.com/avantus-tech/pyproject-runner"
source = "https://github.com/avantus-tech/pyproject-runner"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "hypothesis ~= 6.119",
    "mypy ~= 1.11",
    "pytest ~= 8.3",
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'def __repr__',
    'raise AssertionError',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    '@(typing\.)?overload',
]

[tool.coverage.run]
branch = true
source = ['src/pyproject_runner']
omit = [
	'__main__.py',
]


[tool.hatch.build.targets.sdist]
only-include = [
    '.python-version',
    'uv.lock',
    'src/pyproject_runner/',
    '.gitignore',
    'LICENSE.txt',
    'README.md',
    'pyproject.toml',
]

[tool.hatch.build.targets.wheel]
packages = ["src/pyproject_runner"]

[tool.mypy]
mypy_path = "src"
packages = "pyproject_runner"
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pyproject-runner.tasks]
check = {pre=["typecheck", "test"], help="Perform all code checks"}
coverage = {cmd='uv run --with "pytest-cov~=6.0" pytest --cov=pyproject_runner', help="Run unit tests and report coverage"}
help = {cmd="uv run rr -l", help="Show this help and exit"}
test = {cmd="pytest", help="Run unit tests"}
typecheck = {cmd="mypy src tests", help="Perform type analysis on src and tests"}

[tool.uv.workspace]
members = ["shim"]
