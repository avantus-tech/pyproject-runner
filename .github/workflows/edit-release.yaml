name: Edit Release

on:
  release:
    types: [edited]

jobs:
  edit-release:
    name: Check the type of edit
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

#      - name: Check out release tag
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.ref }}
#
#      - name: Build and inspect Python package
#        uses: hynek/build-and-inspect-python-package@v2
#        id: baipp
#        env:
#          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ github.event.release.tag_name }}
#
#      - name: Upload Python packages to GitHub assets
#        env:
#          GH_TOKEN: ${{ github.token }}
#        run: gh release upload "${{ github.event.release.tag_name }}" "${{ steps.baipp.outputs.dist }}"/pyproject_runner-*.{tar.gz,whl}
#
#  test-publish:
#    if: ${{ github.event.release.prerelease }}
#    name: Publish on Test PyPI
#    runs-on: ubuntu-latest
#    needs: build-release
#    environment: test-release
#    permissions:
#      id-token: write
#    steps:
#      - name: Install uv
#        uses: astral-sh/setup-uv@v4
#
#      - name: Download Python packages from GitHub assets
#        env:
#          GH_TOKEN: ${{ github.token }}
#        run: gh release download "${{ github.event.release.tag_name }}" --dir dist --pattern '*.tar.gz' --pattern '*.whl'
#
#      - name: Upload package to Test PyPI
#        run: uv publish --trusted-publishing always --publish-url https://test.pypi.org/legacy/
#
#  publish:
#    if: ${{ ! github.event.release.prerelease }}
#    name: Publish to PyPI
#    runs-on: ubuntu-latest
#    needs: build-release
#    environment: release
#    permissions:
#      id-token: write
#    steps:
#      - name: Install uv
#        uses: astral-sh/setup-uv@v4
#
#      - name: Download Python packages from GitHub assets
#        env:
#          GH_TOKEN: ${{ github.token }}
#        run: gh release download "${{ github.event.release.tag_name }}" --dir dist --pattern '*.tar.gz' --pattern '*.whl'
#
#      - name: Upload package to PyPI
#        run: echo uv publish --trusted-publishing always
